{"version":3,"sources":["components/Form/index.jsx","utils/replacePatterString.js","utils/validateField.js","utils/uploadImage.js","utils/toPatternNormalize.js","redux/actions/alert.js","redux/actions/actionTypes.js","hooks/useFormBuilder.js","services/AuthService.js","redux/actions/auth.js","views/Auth/hooks/useAuth.js","views/Auth/formParam.js","views/Auth/index.jsx","components/ProductPage/formParam.js","components/ProductPage/index.jsx","services/StorageService.js","services/ProductService.js","views/EditProduct/index.jsx","views/EditProduct/hooks/useEditPorduct.js","views/CreateProduct/index.jsx","views/CreateProduct/hooks/useCreateProduct.js","components/ProductCard/Coast/index.jsx","utils/getCurrentCoast.js","components/ProductCard/index.jsx","views/ProductList/index.jsx","views/ProductList/hooks/useProductList.js","components/Snackbar/index.jsx","components/Navigation/index.jsx","components/Layout/index.jsx","App.jsx","serviceWorker.js","redux/reducers/auth.js","redux/reducers/alert.js","redux/reducers/rootReducer.js","store.js","index.jsx"],"names":["Form","props","form","onChange","onBlur","onSubmit","children","fieldDefaultParams","variant","margin","fullWidth","inputProps","field","prefix","startAdornment","InputAdornment","position","Object","keys","map","key","hidden","TextField","InputProps","template","string","variables","forEach","variable","replace","value","messages","error","helperText","validation","require","trim","minLength","maxLength","length","replacePatterString","is","number","min","max","email","not","sizeValidation","photoB64","Promise","resolve","reject","iamge","Image","src","onload","width","height","validTypes","event","target","files","reader","FileReader","type","some","validType","readAsDataURL","photoFile","e","a","result","Error","join","newValue","oldValue","pattern","regexp","RegExp","test","alertOpen","payload","touchedTime","Date","now","useFormBuilder","formParam","formData","initalForm","useState","setForm","dispatch","useDispatch","setErorMessage","message","checkingRelatedFields","name","discountExpirationDate","disabled","oldState","state","normalizedValue","toPatternNormalize","processedField","validateField","getFormData","isInvalid","newState","reduce","acc","rootUrl","urls","registration","login","PostService","password","body","returnSecureToken","url","process","$axios","post","data","loginSuccess","token","localStorage","setItem","logout","removeItem","auth","AuthService","idToken","authTypes","label","connect","onLogout","history","useHistory","authType","setAuthType","sendData","push","console","changeAuthType","useAuth","useEffect","Title","chngeTypeButton","Button","color","onClick","subbmitButton","className","preventDefault","title","description","multiline","rows","coast","discountPercent","propAlertOpen","pageData","imageUrl","isLoading","fileInput","useRef","inputFileKey","setInputFileKey","imageFile","imageBase64","setImage","onFileLoad","uploadImage","image","loader","CircularProgress","accept","ref","alt","component","current","click","startIcon","storageRef","firebase","apiKey","storageBucket","storage","imageName","mountainImagesRef","child","put","imageInfo","metadata","fullPath","imagePath","delete","oldImagePath","newImageFile","this","removeImage","loadImage","getDownloadURL","axiosInstance","create","baseURL","productsList","parsedProductList","productsListIds","i","id","product","StorageService","getImage","photoUrL","originPhotoUrl","get","parseProductsList","productData","patch","withRouter","setProductData","setPhotoUrL","setIsLoading","isSaving","setIsSaving","setIriginalPhotoUrL","getProduct","ProductService","getProductById","saveProduct","replaceImage","newImageUrl","newProductData","updateProduct","setTimeout","useEditPorduct","match","params","createProduct","useCreateProduct","Coast","moment","valueOf","currentCoast","toFixed","getCurrentCoast","oldCoast","expirationDate","currentCoastClasses","ProductCard","onRemove","action","isAuth","IconButton","productList","setProduct","getProductsList","products","removeProduct","removeProductById","openEditPage","useProductList","gridSizeParams","xl","lg","md","sm","xs","Grid","container","spacing","item","Alert","elevation","alert","onClose","open","vertical","horizontal","closeTimeout","setCloseTimeout","clearTimeout","Snackbar","autoHideDuration","anchorOrigin","severity","links","to","AppBar","Toolbar","link","Layout","Container","maxWidth","style","paddingTop","propAutoLogin","getItem","routes","path","ProductList","exact","isLayout","Auth","protectedRoutes","CreateProduct","EditProduct","route","render","Component","Boolean","window","location","hostname","initalState","combineReducers","store","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","unregister","catch"],"mappings":"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","file":"static/js/main.61d3e4a4.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\n//@material-ui\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\n\nconst Form = (props) => {\n  const {\n    form,\n    onChange,\n    onBlur,\n    onSubmit,\n    children,\n  } = props;\n\n  const fieldDefaultParams = {\n    variant: 'outlined',\n    margin: 'normal',\n    fullWidth: true,\n  };\n\n  const inputProps = (field) => {\n    if (field.prefix) {\n      return {\n        startAdornment: (\n          <InputAdornment position=\"start\">\n            {field.prefix}\n          </InputAdornment>\n        ),\n      };\n    }\n    return null;\n  };\n\n  return (\n    <form onSubmit={onSubmit}>\n      {\n        Object.keys(form).map((key) => {\n          const field = form[key];\n          if (field.hidden) {\n            return null;\n          }\n          return (\n            <TextField\n              key={key}\n              {...field}\n              {...fieldDefaultParams}\n              onChange={onChange}\n              onBlur={onBlur}\n              InputProps={inputProps(field)}\n            />\n          );\n        })\n      }\n      { children }\n    </form>\n  );\n};\n\nForm.propTypes = {\n  form: PropTypes.object,\n  onChange: PropTypes.func,\n  onBlur: PropTypes.func,\n  onSubmit: PropTypes.func,\n  children: PropTypes.node,\n};\n\nexport default Form;","export default (template, ...variables) => {\n  let string = template;\n  variables.forEach((variable) => {\n    string = string.replace(`{${variable.key}}`, variable.value);\n  });\n  return string;\n};\n","import is from 'is_js';\nimport replacePatterString from './replacePatterString';\n\nconst messages = {\n  require: 'Поле не может быть пустым',\n  minLength: 'Поле должно содержать более {minLength} символов',\n  maxLength: 'Поле должно содержать до {maxLength} символов',\n  minMaxLength: 'Поле должно содержать от {minLength} до {maxLength} символов',\n  email: 'Введите валидный Email',\n  minMax: 'Значение должно быть не ниже {min} и не больше {max}',\n  min: 'Значение должно быть не мение чем {min}',\n  max: 'Значение должно быть не больше чем {max}',\n};\n\nexport default (value, field = {}) => {\n  let error = false;\n  let helperText = '';\n  const { validation } = field;\n\n  if (validation) {\n    if (validation.require) {\n      if (!value.trim()) {\n        error = true;\n        helperText = messages.require;\n      }\n    }\n\n    if (validation.minLength && validation.maxLength) {\n      if (value.trim().length < validation.minLength\n      || value.trim().length > validation.maxLength) {\n        error = true;\n        helperText = replacePatterString(\n          messages.minMaxLength,\n          {\n            key: 'minLength',\n            value: validation.minLength,\n          },\n          {\n            key: 'maxLength',\n            value: validation.maxLength,\n          },\n        );\n      }\n    } else if (validation.minLength) {\n      if (value.trim().length < validation.minLength) {\n        error = true;\n        helperText = replacePatterString(\n          messages.minLength,\n          {\n            key: 'minLength',\n            value: validation.minLength,\n          },\n        );\n      }\n    } else if (validation.maxLength) {\n      if (value.trim().length > validation.maxLength) {\n        error = true;\n        helperText = replacePatterString(\n          messages.maxLength,\n          {\n            key: 'maxLength',\n            value: validation.maxLength,\n          },\n        );\n      }\n    }\n\n    if (is.number(+value) && value) {\n      if (validation.min && validation.max) {\n        if (+value < validation.min || +value > validation.max) {\n          error = true;\n          helperText = replacePatterString(\n            messages.minMax,\n            {\n              key: 'min',\n              value: validation.min,\n            },\n            {\n              key: 'max',\n              value: validation.max,\n            },\n          );\n        }\n      } else if (validation.min) {\n        if (+value < validation.min) {\n          error = true;\n          helperText = replacePatterString(\n            messages.min,\n            {\n              key: 'min',\n              value: validation.min,\n            },\n          );\n        }\n      } else if (validation.max) {\n        if (+value > validation.max) {\n          error = true;\n          helperText = replacePatterString(\n            messages.max,\n            {\n              key: 'max',\n              value: validation.max,\n            },\n          );\n        }\n      }\n    }\n\n    if (validation.email) {\n      if (is.not.email(value)) {\n        error = true;\n        helperText = messages.email;\n      }\n    }\n  }\n\n  return {\n    ...field,\n    error,\n    helperText,\n    value,\n  };\n};\n","const sizeValidation = (photoB64, { max, min }) => new Promise((resolve, reject) => {\n  const iamge = new Image();\n  iamge.src = photoB64;\n  iamge.onload = () => {\n    if (\n      !iamge.width\n      || !iamge.width\n      || iamge.width > max\n      || iamge.width < min\n      || iamge.height > max\n      || iamge.height < min\n    ) {\n      reject();\n    } else {\n      resolve();\n    }\n  };\n});\n\nconst validTypes = [\n  'image/jpeg',\n  'image/jpg',\n  'image/png',\n];\n\nexport default (event) => new Promise((resolve, reject) => {\n  if (event.target.files && event.target.files[0]) {\n    const reader = new FileReader();\n    const { type } = event.target.files[0];\n\n    if (validTypes.some((validType) => validType === type)) {\n      reader.readAsDataURL(event.target.files[0]);\n      const photoFile = event.target.files[0];\n\n      reader.onload = async (e) => {\n        const photoB64 = e.target.result;\n        try {\n          await sizeValidation(photoB64, { min: 200, max: 4000 });\n          resolve([photoFile, photoB64]);\n        } catch (error) {\n          reject(new Error('size error: width and hight must be between 200px and 4000px'));\n        }\n      };\n    } else {\n      reject(new Error(`invalid file type: allowed types ${validTypes.join(',')}`));\n    }\n  } else {\n    reject(new Error('error'));\n  }\n});\n","export default (newValue, oldValue, pattern) => {\n  const regexp = new RegExp(...pattern);\n  if (!newValue || regexp.test(newValue)) {\n    return newValue;\n  }\n  return oldValue;\n};\n","import {\n  ALERT_ON,\n  ALERT_CLOSE,\n  ALERT_CLEAR_MESSAGE,\n} from './actionTypes';\n\nexport function alertOpen(payload) {\n  return {\n    type: ALERT_ON,\n    payload: {\n      ...payload,\n      touchedTime: Date.now(),\n    },\n  };\n}\n\nfunction alertClose() {\n  return {\n    type: ALERT_CLOSE,\n  };\n}\n\nfunction alertClearMessage() {\n  return {\n    type: ALERT_CLEAR_MESSAGE,\n  };\n}\n\nexport function alertClear() {\n  return (dispatch) => {\n    dispatch(alertClose());\n    setTimeout(() => {\n      dispatch(alertClearMessage());\n    }, 500);\n  };\n}\n","export const AUTH_LOGIN_SUCCESS = 'AUTH_LOGIN_SUCCESS';\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\n\nexport const ALERT_ON = 'ALERT_ON';\nexport const ALERT_CLOSE = 'ALERT_CLOSE';\nexport const ALERT_CLEAR_MESSAGE = 'ALERT_CLEAR_MESSAGE';\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { validateField, toPatternNormalize } from '../utils';\nimport { alertOpen } from '../redux/actions/alert';\n\nexport const useFormBuilder = (formParam = {}, formData = {}) => {\n  const initalForm = {};\n  Object.keys(formParam).forEach((key) => {\n    initalForm[key] = {\n      ...formParam[key],\n      value: formData[key] || '',\n    };\n  });\n  const [form, setForm] = useState(initalForm);\n  const dispatch = useDispatch();\n\n  const setErorMessage = () => {\n    dispatch(alertOpen({\n      message: 'Форма не валидна!',\n    }));\n  };\n\n  const checkingRelatedFields = (name, value) => {\n    switch (name) {\n      case 'discountPercent':\n        if (value.trim()\n          && form.discountExpirationDate\n          && form.discountExpirationDate.disabled === true) {\n          setForm((oldState) => ({\n            ...oldState,\n            discountExpirationDate: {\n              ...oldState.discountExpirationDate,\n              disabled: false,\n              hidden: false,\n              validation: {\n                require: true,\n              },\n            },\n          }));\n        } else if (!value.trim()\n          && form.discountExpirationDate\n          && form.discountExpirationDate.disabled === false) {\n          setForm((oldState) => ({\n            ...oldState,\n            discountExpirationDate: {\n              ...oldState.discountExpirationDate,\n              disabled: true,\n              validation: null,\n              hidden: true,\n              value: '',\n            },\n          }));\n        }\n        break;\n      default:\n        break;\n    }\n  };\n\n  const onChange = ({ target }) => {\n    const { name, value } = target;\n    setForm((state) => {\n      const normalizedValue = state[name].pattern\n        ? toPatternNormalize(value, state[name].value, state[name].pattern)\n        : value;\n      return {\n        ...state,\n        [name]: {\n          ...state[name],\n          value: normalizedValue,\n          error: false,\n          helperText: '',\n        },\n      };\n    });\n    checkingRelatedFields(name, value);\n  };\n\n  const onBlur = ({ target }) => {\n    const { name, value } = target;\n    setForm((state) => {\n      const processedField = validateField(value, state[name]);\n      return {\n        ...state,\n        [name]: processedField,\n      };\n    });\n  };\n\n  const getFormData = () => {\n    let isInvalid;\n    setForm((state) => {\n      const newState = Object.keys(state).reduce((acc, name) => ({\n        ...acc,\n        [name]: validateField(state[name].value, state[name]),\n      }), {});\n\n      isInvalid = Object.keys(newState).some((name) => newState[name].error);\n\n      return newState;\n    });\n\n    if (isInvalid) {\n      setErorMessage();\n      return false;\n    } else {\n      return Object.keys(form).reduce((acc, key) => ({\n        ...acc,\n        [key]: form[key].value || '',\n      }), {});\n    }\n  };\n\n  return {\n    form,\n    getFormData,\n    onChange,\n    onBlur,\n  };\n};\n","import $axios from 'axios';\n\nconst apiKey = process.env.REACT_APP_FIREBASE_API_KEY || '';\nconst rootUrl = 'https://identitytoolkit.googleapis.com/v1/';\n\nconst urls = {\n  registration: `${rootUrl}accounts:signUp`,\n  login: `${rootUrl}accounts:signInWithPassword`,\n};\n\nexport default class PostService {\n  static async auth(email, password, type) {\n    const body = {\n      email,\n      password,\n      returnSecureToken: true,\n    };\n    const url = `${urls[type]}?key=${apiKey}`;\n    const { data } = await $axios.post(url, body);\n    return data;\n  }\n}\n","import {\r\n  AUTH_LOGIN_SUCCESS,\r\n  AUTH_LOGOUT,\r\n} from './actionTypes';\r\n\r\nimport { alertOpen } from './alert';\r\n\r\nimport AuthService from '../../services/AuthService';\r\n\r\nfunction loginSuccess(token) {\r\n  localStorage.setItem('token', token);\r\n  return {\r\n    type: AUTH_LOGIN_SUCCESS,\r\n    payload: token,\r\n  };\r\n}\r\n\r\nexport function logout() {\r\n  localStorage.removeItem('token');\r\n  return {\r\n    type: AUTH_LOGOUT,\r\n  };\r\n}\r\n\r\nexport function autoLogin() {\r\n  return (dispatch) => {\r\n    const token = localStorage.getItem('token');\r\n    if (!token) {\r\n      dispatch(logout());\r\n    } else {\r\n      dispatch(loginSuccess(token));\r\n    }\r\n  };\r\n}\r\n\r\nexport function auth(email, password, type) {\r\n  return async (dispatch) => {\r\n    try {\r\n      const { idToken } = await AuthService.auth(email, password, type);\r\n      dispatch(loginSuccess(idToken));\r\n    } catch (e) {\r\n      const errorMessage = type === 'login'\r\n        ? 'Ошибка при авторизации'\r\n        : 'Ошибка при регистрации';\r\n      dispatch(alertOpen({ message: errorMessage }));\r\n      dispatch(logout());\r\n      throw (e);\r\n    }\r\n  };\r\n}\r\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { auth } from '../../../redux/actions/auth';\n\nconst authTypes = {\n  login: 'login',\n  registration: 'registration',\n};\n\nexport const useAuth = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const [authType, setAuthType] = useState(authTypes.login);\n\n  const changeAuthType = () => {\n    setAuthType((state) => (state === authTypes.login\n      ? authTypes.registration\n      : authTypes.login));\n  };\n\n  const sendData = async ({ email, password }) => {\n    try {\n      await dispatch(auth(email, password, authType));\n      history.push('/');\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return {\n    authType,\n    sendData,\n    changeAuthType,\n  };\n};\n","export default {\n  email: {\n    type: 'text',\n    name: 'email',\n    label: 'email',\n    value: '',\n    validation: {\n      email: true,\n    },\n  },\n  password: {\n    type: 'password',\n    name: 'password',\n    label: 'password',\n    value: '',\n    validation: {\n      minLength: 8,\n      maxLength: 20,\n    },\n  },\n};\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\n// @material-ui\nimport Button from '@material-ui/core/Button';\n\n// compomemts\nimport Form from '../../components/Form';\n\n// hooks\nimport { useFormBuilder } from '../../hooks/useFormBuilder';\nimport { useAuth } from './hooks/useAuth';\n\n//actions\nimport { logout } from '../../redux/actions/auth';\n\nimport formParam from './formParam';\nimport './style.scss';\n\nconst Auth = ({ onLogout }) => {\n  const {\n    form,\n    getFormData,\n    onChange,\n    onBlur,\n  } = useFormBuilder(formParam);\n\n  const {\n    authType,\n    changeAuthType,\n    sendData,\n  } = useAuth();\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    const formData = getFormData();\n    if (formData) {\n      sendData(formData);\n    }\n  };\n\n  useEffect(() => {\n    onLogout();\n  }, [onLogout]);\n\n  const Title = <h2>{ authType === 'login' ? 'Вход' : 'Регистрация' }</h2>;\n  const chngeTypeButton = (\n    <Button\n      color=\"primary\"\n      type=\"button\"\n      onClick={changeAuthType}\n    >\n      { authType === 'login' ? 'регистрация' : 'войти' }\n    </Button>\n  );\n  const subbmitButton = (\n    <Button\n      variant=\"contained\"\n      color=\"primary\"\n      type=\"submit\"\n    >\n      { authType === 'login' ? 'Вход' : 'Зарегистрироваться' }\n    </Button>\n  );\n\n  return (\n    <div className=\"auth\">\n      <div className=\"auth__form-wrapper\">\n        { Title }\n        <Form\n          form={form}\n          onSubmit={onSubmit}\n          onChange={onChange}\n          onBlur={onBlur}\n        >\n          <div className=\"auth__footer\">\n            { chngeTypeButton }\n            { subbmitButton }\n          </div>\n        </Form>\n      </div>\n    </div>\n  );\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    onLogout: () => dispatch(logout()),\n  };\n};\n\nAuth.propTypes = {\n  onLogout: PropTypes.func,\n};\n\nexport default connect(null, mapDispatchToProps)(Auth);\n","export default {\n  title: {\n    type: 'text',\n    name: 'title',\n    label: 'Title',\n    value: '',\n    validation: {\n      require: true,\n      minLength: 20,\n      maxLength: 60,\n    },\n  },\n  description: {\n    type: 'text',\n    name: 'description',\n    label: 'description',\n    multiline: true,\n    rows: 4,\n    value: '',\n    validation: {\n      maxLength: 200,\n    },\n  },\n  coast: {\n    type: 'text',\n    name: 'coast',\n    label: 'coast',\n    value: '',\n    prefix: '$',\n    pattern: ['^(?=.*\\\\d)\\\\d*(?:\\\\.\\\\d{0,2})?$', 'g'],\n    validation: {\n      require: true,\n      min: 0,\n      max: 99999999.99,\n    },\n  },\n  discountPercent: {\n    type: 'text',\n    name: 'discountPercent',\n    label: 'discount',\n    prefix: '%',\n    value: '',\n    pattern: ['^[0-9]+$', 'g'],\n    validation: {\n      min: 10,\n      max: 90,\n    },\n  },\n  discountExpirationDate: {\n    hidden: true,\n    disabled: true,\n    prefix: ' ',\n    type: 'date',\n    name: 'discountExpirationDate',\n    label: 'discount Expiration Date',\n    value: '',\n  },\n};\n","import React, { useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\n//@material-ui\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n//components\nimport Form from '../../components/Form';\n\n//actions\nimport { alertOpen } from '../../redux/actions/alert';\n\n//utils\nimport uploadImage from '../../utils/uploadImage';\n\n//hooks\nimport { useFormBuilder } from '../../hooks/useFormBuilder';\n\nimport formParam from './formParam';\nimport './style.scss';\n\nconst ProductPage = (props) => {\n  const {\n    propAlertOpen,\n    pageData = {},\n    imageUrl = '',\n    isLoading,\n    sendData,\n  } = props;\n\n  const {\n    form,\n    getFormData,\n    onChange,\n    onBlur,\n  } = useFormBuilder(formParam, pageData);\n\n  const fileInput = useRef(null);\n\n  // for celar fileInput value\n  const [inputFileKey, setInputFileKey] = useState(null);\n\n  const [[imageFile, imageBase64], setImage] = useState([null, imageUrl]);\n\n  const onFileLoad = async (e) => {\n    setInputFileKey(Date.now());\n    try {\n      const image = await uploadImage(e);\n      setImage(image);\n    } catch ({message}) {\n      propAlertOpen({ message });\n    }\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    const formData = getFormData();\n    if (formData && imageBase64) {\n      sendData(formData, imageFile);\n    } else if (!imageBase64) {\n      propAlertOpen({ message: 'Необходимо добавить фотографию' });\n    }\n  };\n\n  const loader = isLoading && <CircularProgress className=\"g-spiner\" />;\n\n  return (\n    <>\n      { loader }\n      <div className=\"create-product\">\n        <div className=\"create-product__form-wrapper\">\n          <Form\n            form={form}\n            onSubmit={onSubmit}\n            onChange={onChange}\n            onBlur={onBlur}\n          >\n            <input\n              className=\"create-product__file-input\"\n              type=\"file\"\n              onChange={onFileLoad}\n              accept=\"image/*\"\n              ref={fileInput}\n              key={inputFileKey}\n            />\n            {\n              imageBase64 && (\n                <img\n                  alt=\"candidate\"\n                  className=\"create-product__image\"\n                  src={imageBase64}\n                />\n              )\n            }\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              component=\"span\"\n              onClick={() => fileInput.current.click()}\n              startIcon={<PhotoCamera />}\n            >\n              {imageBase64 ? 'Изменить фотографию' : 'Добавить фотографию'}\n            </Button>\n            <div className=\"create-product__footer\">\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                type=\"submit\"\n              >\n                Сохранить\n              </Button>\n            </div>\n          </Form>\n        </div>\n      </div>\n    </>\n  );\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    propAlertOpen: (payload) => dispatch(alertOpen(payload)),\n  };\n};\n\nProductPage.propTypes = {\n  propAlertOpen: PropTypes.func,\n  sendData: PropTypes.func,\n  pageData: PropTypes.object,\n  imageUrl: PropTypes.string,\n  isLoading: PropTypes.bool,\n};\n\nexport default connect(null, mapDispatchToProps)(ProductPage);\n","import * as firebase from 'firebase';\n\nconst apiKey = process.env.REACT_APP_FIREBASE_API_KEY || '';\nconst app = firebase.initializeApp({\n  apiKey,\n  storageBucket: 'gs://cleverod-test.appspot.com',\n});\n\nconst storageRef = app.storage().ref();\n\nexport default class PostService {\n  static async loadImage(image) {\n    const imageName = `image-${Date.now()}-${image.name}`;\n    const mountainImagesRef = storageRef.child(imageName);\n    const imageInfo = await mountainImagesRef.put(image);\n    return imageInfo.metadata.fullPath;\n  }\n\n  static async removeImage(imagePath) {\n    storageRef.child(imagePath).delete();\n  }\n\n  static async replaceImage(oldImagePath, newImageFile) {\n    if (oldImagePath) {\n      this.removeImage(oldImagePath);\n    }\n    return await this.loadImage(newImageFile);\n  }\n\n  static async getImage(src) {\n    try {\n      return await storageRef.child(src).getDownloadURL();\n    } catch (e) {\n      return src;\n    }\n  }\n}\n","import $axios from 'axios';\nimport StorageService from './StorageService';\n\nconst baseURL = 'https://cleverod-test.firebaseio.com/';\n\nconst url = {\n  path: '/products/',\n  postfix: '.json',\n};\n\nconst axiosInstance = $axios.create({\n  baseURL,\n});\n\nexport default class PostService {\n  static async parseProductsList(productsList) {\n    const parsedProductList = [];\n    const productsListIds = Object.keys(productsList);\n    for (let i = 0; i < productsListIds.length; i++) {\n      const id = productsListIds[i];\n      const product = productsList[id];\n      const photoUrL = await StorageService.getImage(product.photoUrL);\n      parsedProductList.push({\n        ...product,\n        id,\n        originPhotoUrl: product.photoUrL,\n        photoUrL,\n      });\n    }\n    return parsedProductList;\n  }\n\n  static async getProductsList() {\n    const { data } = await axiosInstance.get(url.path + url.postfix);\n    return await this.parseProductsList(data || {});\n  }\n\n  static async createProduct(data, image) {\n    const photoUrL = await StorageService.loadImage(image);\n    const productData = {\n      ...data,\n      photoUrL,\n    };\n    await axiosInstance.post(url.path + url.postfix, productData);\n  }\n\n  static async getProductById(id) {\n    const { data } = await axiosInstance.get(url.path + id + url.postfix);\n    const photoUrL = await StorageService.getImage(data.photoUrL);\n    return {\n      ...data,\n      originPhotoUrl: data.photoUrL,\n      photoUrL,\n    };\n  }\n\n  static async updateProduct(data, id) {\n    axiosInstance.patch(url.path + id + url.postfix, data)\n  }\n\n  static async removeProductById(id, originPhotoUrl) {\n    if (originPhotoUrl) {\n      StorageService.removeImage(originPhotoUrl);\n    }\n    await axiosInstance.delete(url.path + id + url.postfix);\n  }\n}\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\n\n// @material-ui\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n// components\nimport ProductPage from '../../components/ProductPage';\n\n// hooks\nimport useEditPorduct from './hooks/useEditPorduct';\n\nconst EditProduct = ({ match: { params: { id } } }) => {\n  const {\n    productData,\n    photoUrL,\n    isLoading,\n    isSaving,\n    saveProduct\n  } = useEditPorduct(id);\n\n  return (\n    <div>\n      {\n        isLoading\n          ? <CircularProgress className=\"g-spiner\" />\n          : (\n            <ProductPage\n              pageData={productData}\n              imageUrl={photoUrL}\n              isLoading={isSaving}\n              sendData={saveProduct}\n            />\n          ) \n      }\n    </div>\n  );\n};\n\nexport default withRouter(EditProduct)\n","import { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport ProductService from '../../../services/ProductService';\nimport StorageService from '../../../services/StorageService';\n\nexport default (id) => {\n  const [productData, setProductData] = useState({});\n  const [photoUrL, setPhotoUrL] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isSaving, setIsSaving] = useState(false);\n  const [originPhotoUrl, setIriginalPhotoUrL] = useState('');\n  const history = useHistory();\n\n\n  const getProduct = async () => {\n    setIsLoading(true);\n    try {\n      const product = await ProductService.getProductById(id);\n      setProductData(product);\n      setPhotoUrL(product.photoUrL)\n      setIriginalPhotoUrL(product.originPhotoUrl)\n    } finally {\n      setIsLoading(false);\n    }\n  }\n\n  const saveProduct = async (formData, image) => {\n    if (isSaving) return;\n    let newImageUrl;\n\n    try {\n      setIsSaving(true)\n      if (image && photoUrL) {\n        newImageUrl = await StorageService.replaceImage(originPhotoUrl, image);\n      } else if (image) {\n        newImageUrl = await StorageService.loadImage(image);\n      }\n      const newProductData = { ...formData };\n  \n      if (newImageUrl) {\n        newProductData.photoUrL = newImageUrl;\n      }\n  \n      await ProductService.updateProduct(newProductData, id);\n      \n      setTimeout(() => {\n        history.push('/');\n      }, 2000)\n    } finally {\n      setIsSaving(false)\n    }\n  }\n\n  useEffect(() => {\n    getProduct();\n  }, [])\n\n  return {\n    productData,\n    photoUrL,\n    isLoading,\n    isSaving,\n    saveProduct,\n  };\n};","import React from 'react';\n\nimport ProductPage from '../../components/ProductPage';\n\nimport { useCreateProduct } from './hooks/useCreateProduct';\n\nexport default () => {\n  const {\n    sendData,\n    isLoading,\n  } = useCreateProduct();\n\n  return (\n    <ProductPage \n      sendData={sendData}\n      isLoading={isLoading}\n    />\n  )\n};\n","import { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport ProductService from '../../../services/ProductService';\n\nexport const useCreateProduct = () => {\n  const [isLoading, setIsLoading] = useState(false);\n\n  const history = useHistory();\n\n  const sendData = async (formData, image) => {\n    if (isLoading) return;\n    try {\n      setIsLoading(true);\n      await ProductService.createProduct(formData, image);\n      history.push('/');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return {\n    sendData,\n    isLoading,\n  };\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { getCurrentCoast } from '../../../utils';\nimport './style.scss';\n\nconst Coast = ({ coast, discountPercent, discountExpirationDate }) => {\n  const [\n    currentCoast,\n    oldCoast,\n    expirationDate,\n  ] = getCurrentCoast(coast, discountPercent, discountExpirationDate);\n\n  const currentCoastClasses = ['coast__main'];\n\n  if (oldCoast) {\n    currentCoastClasses.push('coast__main--discount');\n  }\n\n  return (\n    <div className=\"coast\">\n      <div>\n        <div className={currentCoastClasses.join(' ')}>\n          { currentCoast }\n          $\n        </div>\n        {\n          oldCoast && (\n            <div className=\"coast__old\">\n              { oldCoast }\n              $\n            </div>\n          )\n        }\n      </div>\n      {\n        expirationDate && (\n          <span className=\"coast__date\">\n            до (\n            { expirationDate }\n            )\n          </span>\n        )\n      }\n    </div>\n  );\n};\n\nCoast.propTypes = {\n  coast: PropTypes.string,\n  discountPercent: PropTypes.string,\n  discountExpirationDate: PropTypes.string,\n};\n\nexport default Coast;","import is from 'is_js';\n\nexport default (coast, discountPercent, discountExpirationDate) => {\n  if (\n    !discountExpirationDate\n    || !discountPercent\n    || is.not.number(+coast)\n    || is.not.number(+discountPercent)\n  ) {\n    return [coast, null, null];\n  }\n\n  const moment = Date.now();\n  const discountExpirationDateValueOf = new Date(discountExpirationDate).valueOf();\n  if (discountExpirationDateValueOf > moment) {\n    let currentCoast = coast - (coast / 100) * discountPercent;\n    currentCoast = currentCoast.toFixed(2);\n\n    return [currentCoast, coast, discountExpirationDate];\n  }\n  return [coast, null, null];\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// @material-ui\nimport IconButton from '@material-ui/core/IconButton';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\n// components\nimport Coast from './Coast';\n\nimport './style.scss';\n\nconst ProductCard = (props) => {\n  const {\n    title,\n    description,\n    photoUrL,\n    coast,\n    discountPercent,\n    discountExpirationDate,\n    onChange,\n    onRemove,\n    isAuth\n  } = props;\n\n  const action = isAuth && (\n    <div className=\"product-card__action\">\n    <IconButton\n      color=\"primary\"\n      onClick={onChange}\n    >\n      <EditIcon />\n    </IconButton>\n    <IconButton\n      color=\"primary\"\n      onClick={onRemove}\n    >\n      <DeleteIcon />\n    </IconButton>\n  </div>\n  );\n\n  return (\n    <div className=\"product-card\">\n      <header className=\"product-card__header\">\n        <h2 className=\"product-card__title\">\n          { title }\n        </h2>\n        <Coast\n          coast={coast}\n          discountExpirationDate={discountExpirationDate}\n          discountPercent={discountPercent}\n        />\n      </header>\n      <img\n        alt={title}\n        src={photoUrL}\n        className=\"product-card__image\"\n      />\n      <div className=\"product-card__description\">\n        { description }\n      </div>\n      { action }\n    </div>\n  );\n};\n\nProductCard.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string,\n  photoUrL: PropTypes.string,\n  coast: PropTypes.string, \n  discountPercent: PropTypes.string,\n  discountExpirationDate: PropTypes.string,\n  onChange: PropTypes.func,\n  onRemove: PropTypes.func,\n  isAuth: PropTypes.bool,\n};\n\nexport default ProductCard;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\n// @material-ui\nimport Grid from '@material-ui/core/Grid';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n// components\nimport ProductCard from '../../components/ProductCard';\n\n// hooks\nimport { useProductList } from './hooks/useProductList';\n\nconst Products = ({ isAuth }) => {\n  const {\n    productList,\n    isLoading,\n    removeProduct,\n    openEditPage,\n  } = useProductList();\n\n  const gridSizeParams = {\n    xl: 2,\n    lg: 3,\n    md: 4,\n    sm: 6,\n    xs: 12,\n  };\n\n  const loader = isLoading && <CircularProgress className=\"g-spiner\" />;\n\n  return (\n    <>\n      { loader }\n      <Grid container spacing={3}>\n        { productList.map(((product) => (\n          <Grid\n            item\n            {...gridSizeParams}\n            key={product.id}\n          >\n            <ProductCard\n              {...product}\n              isAuth={isAuth}\n              onChange={() => openEditPage(product.id)}\n              onRemove={() => removeProduct(product.id, product.originPhotoUrl)}\n            />\n          </Grid>\n        ))) }\n      </Grid>\n    </>\n  );\n};\n\nProducts.propTypes = {\n  isAuth: PropTypes.bool,\n};\n\nfunction mapStateToProps(state) {\n  return {\n    isAuth: !!state.auth.token,\n  };\n}\n\nexport default connect(mapStateToProps)(Products)\n","import { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport ProductService from '../../../services/ProductService';\n\nexport const useProductList = () => {\n  const history = useHistory();\n  const [productList, setProduct] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const getProductsList = async () => {\n    try {\n      setIsLoading(true);\n      const products = await ProductService.getProductsList();\n      setProduct(products);\n    } catch (e) {\n      console.error(e);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const removeProduct = async (id, originPhotoUrl) => {\n    await ProductService.removeProductById(id, originPhotoUrl);\n    getProductsList();\n  };\n\n  const openEditPage = (id) => {\n    history.push('/edit/' + id);\n  };\n\n  useEffect(() => {\n    getProductsList();\n  }, []);\n\n  return {\n    isLoading,\n    productList,\n    openEditPage,\n    removeProduct,\n  };\n};\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\n// @material-ui\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\n\n// actions\nimport { alertClear } from '../../redux/actions/alert';\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst AlertSnackbar = (props) => {\n  const {\n    type = 'error',\n    message = '',\n    onClose,\n    open = false,\n    vertical = 'top',\n    horizontal = 'center',\n    touchedTime,\n  } = props;\n\n  const [closeTimeout, setCloseTimeout] = useState(null);\n\n  useEffect(() => {\n    clearTimeout(closeTimeout);\n    setCloseTimeout(setTimeout(onClose, 4000));\n  }, [touchedTime]);\n\n  return (\n    <Snackbar\n      open={open}\n      autoHideDuration={6000}\n      anchorOrigin={{ vertical, horizontal }}\n    >\n      <Alert\n        onClose={onClose}\n        severity={type}\n      >\n        { message }\n      </Alert>\n    </Snackbar>\n  );\n};\n\nfunction mapStateToProps(state) {\n  return {\n    ...state.alert,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    onClose: () => dispatch(alertClear()),\n  };\n};\n\nAlertSnackbar.propTypes = {\n  type: PropTypes.string,\n  message: PropTypes.string,\n  onClose: PropTypes.func,\n  open: PropTypes.bool,\n  vertical: PropTypes.string,\n  horizontal: PropTypes.string,\n  touchedTime: PropTypes.number,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AlertSnackbar);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\n// @material-ui\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\n\nimport './style.scss';\nimport { connect } from 'react-redux';\n\nconst Navigation = ({ isAuth }) => {\n  const links = [\n    {\n      to: '/',\n      label: 'Все продукты',\n    },\n  ];\n\n  if (isAuth) {\n    links.push({\n      to: '/create',\n      label: 'Создать продукт',\n    })\n  }\n\n  const logout = {\n    to: '/auth',\n    label: isAuth ? 'Выход' : 'Вход',\n  };\n\n  return (\n    <AppBar position=\"fixed\">\n      <Toolbar className=\"navigation__container\">\n        <nav>\n          { links.map((link) => (\n            <Link\n              className=\"navigation__link\"\n              to={link.to}\n              key={link.to}\n            >\n              { link.label }\n            </Link>\n          )) }\n        </nav>\n        <Link\n          to={logout.to}\n          className=\"navigation__link\"\n        >\n          { logout.label }\n        </Link>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nfunction mapStateToProps(state) {\n  return {\n    isAuth: !!state.auth.token,\n  };\n};\n\nNavigation.propTypes = {\n  isAuth: PropTypes.bool,\n};\n\nexport default connect(mapStateToProps)(Navigation);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// @material-ui\nimport Container from '@material-ui/core/Container';\nimport Toolbar from '@material-ui/core/Toolbar';\n\n// components\nimport Navigation from '../Navigation';\n\nexport const Layout = ({ children }) => (\n  <>\n    <Navigation />\n    <Toolbar />\n    <Container\n      maxWidth={false}\n      style={{\n        paddingTop: 20,\n      }}\n    >\n      { children }\n    </Container>\n  </>\n);\n\nLayout.propTypes = {\n  children: PropTypes.node,\n};\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\n// components\nimport Auth from './views/Auth';\nimport EditProduct from './views/EditProduct';\nimport CreateProduct from './views/CreateProduct';\nimport ProductList from './views/ProductList';\nimport Snackbar from './components/Snackbar';\nimport { Layout } from './components/Layout'\n\n// actions\nimport { autoLogin } from './redux/actions/auth';\n\nfunction App({ isAuth, propAutoLogin }) {\n  useEffect(() => {\n    propAutoLogin();\n  }, [isAuth]);\n\n  const routes = [\n    {\n      path: '/',\n      component: ProductList,\n      exact: true,\n      isLayout: true,\n    },\n    {\n      path: '/auth',\n      component: Auth,\n    },\n  ];\n\n  if (isAuth) {\n    const protectedRoutes = [\n      {\n        path: '/create',\n        component: CreateProduct,\n        isLayout: true,\n      },\n      {\n        path: '/edit/:id',\n        component: EditProduct,\n        isLayout: true,\n      },\n    ];\n    routes.push(...protectedRoutes);\n  }\n\n  const layout = (isLayout, Component) => {\n    if (isLayout) {\n      return (\n        <Layout>\n          <Component />\n        </Layout>\n      )\n    }\n    return <Component />;\n  } \n\n  return (\n    <>\n      <Snackbar />\n      <Switch>\n        { \n          routes.map(route => (\n            <Route\n              key={route.path}\n              path={route.path}\n              exact={route.exact}\n              render={() => layout(route.isLayout, route.component)}\n            />\n          ))\n        }\n        <Redirect to=\"/\" />\n      </Switch>\n    </>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return {\n    isAuth: !!state.auth.token,\n  };\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    propAutoLogin: () => dispatch(autoLogin()),\n  };\n};\n\n\nApp.propTypes = {\n  isAuth: PropTypes.bool,\n  propAutoLogin: PropTypes.func,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import {\n  AUTH_LOGIN_SUCCESS,\n  AUTH_LOGOUT,\n} from '../actions/actionTypes';\n\nconst initalState = {\n  token: null,\n};\n\nexport default function authReducer(state = initalState, action) {\n  switch (action.type) {\n    case AUTH_LOGIN_SUCCESS:\n      return {\n        ...state,\n        token: action.payload,\n      };\n    case AUTH_LOGOUT:\n      return {\n        ...state,\n        token: null,\n      };\n    default:\n      return {\n        ...state,\n      };\n  }\n}\n","import {\n  ALERT_ON,\n  ALERT_CLOSE,\n  ALERT_CLEAR_MESSAGE,\n} from '../actions/actionTypes';\n\nconst initalState = {\n  open: false,\n  type: 'error',\n  vertical: 'top',\n  horizontal: 'center',\n  message: '',\n  touchedTime: null,\n};\n\nexport default function alertReducer(state = { ...initalState }, action) {\n  switch (action.type) {\n    case ALERT_ON:\n      return {\n        ...state,\n        open: true,\n        ...action.payload,\n      };\n    case ALERT_CLOSE:\n      return { ...initalState, message: state.message };\n    case ALERT_CLEAR_MESSAGE:\n      return { ...initalState };\n    default:\n      return { ...state };\n  }\n}\n","import { combineReducers } from 'redux';\nimport authReducer from './auth';\nimport alertReducer from './alert';\n\nexport default combineReducers({\n  auth: authReducer,\n  alert: alertReducer,\n});\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './redux/reducers/rootReducer';\n\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(thunk),\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './styles/index.scss';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}